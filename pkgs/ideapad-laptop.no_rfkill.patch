diff --git a/drivers/platform/x86/ideapad-laptop.c b/drivers/platform/x86/ideapad-laptop.c
index 0eb5bfdd823a..f0fc3e08d023 100644
--- a/drivers/platform/x86/ideapad-laptop.c
+++ b/drivers/platform/x86/ideapad-laptop.c
@@ -158,6 +158,10 @@ static bool no_bt_rfkill;
 module_param(no_bt_rfkill, bool, 0444);
 MODULE_PARM_DESC(no_bt_rfkill, "No rfkill for bluetooth.");
 
+static bool no_rfkill;
+module_param(no_rfkill, bool, 0444);
+MODULE_PARM_DESC(no_rfkill, "Disable rfkill integration.");
+
 static bool allow_v4_dytc;
 module_param(allow_v4_dytc, bool, 0444);
 MODULE_PARM_DESC(allow_v4_dytc,
@@ -1578,7 +1582,7 @@ static void ideapad_acpi_notify(acpi_handle handle, u32 event, void *data)
 			 */
 			break;
 		case 9:
-			ideapad_sync_rfk_state(priv);
+			if (!no_rfkill) ideapad_sync_rfk_state(priv);
 			break;
 		case 5:
 			ideapad_sync_touchpad_state(priv, true);
@@ -1862,11 +1866,15 @@ static int ideapad_acpi_add(struct platform_device *pdev)
 	if (!priv->features.hw_rfkill_switch)
 		write_ec_cmd(priv->adev->handle, VPCCMD_W_RF, 1);
 
-	for (i = 0; i < IDEAPAD_RFKILL_DEV_NUM; i++)
-		if (test_bit(ideapad_rfk_data[i].cfgbit, &priv->cfg))
-			ideapad_register_rfkill(priv, i);
+	if (!no_rfkill) {
+		for (i = 0; i < IDEAPAD_RFKILL_DEV_NUM; i++)
+			if (test_bit(ideapad_rfk_data[i].cfgbit, &priv->cfg))
+				ideapad_register_rfkill(priv, i);
+
+		ideapad_sync_rfk_state(priv);
+	}
 
-	ideapad_sync_rfk_state(priv);
+	/* The same for Touchpad */
 	ideapad_sync_touchpad_state(priv, false);
 
 	err = ideapad_dytc_profile_init(priv);
@@ -1908,8 +1916,9 @@ static int ideapad_acpi_add(struct platform_device *pdev)
 backlight_failed:
 	ideapad_dytc_profile_exit(priv);
 
-	for (i = 0; i < IDEAPAD_RFKILL_DEV_NUM; i++)
-		ideapad_unregister_rfkill(priv, i);
+	if (!no_rfkill) 
+		for (i = 0; i < IDEAPAD_RFKILL_DEV_NUM; i++)
+			ideapad_unregister_rfkill(priv, i);
 
 	ideapad_kbd_bl_exit(priv);
 	ideapad_input_exit(priv);
@@ -1935,8 +1944,9 @@ static int ideapad_acpi_remove(struct platform_device *pdev)
 	ideapad_backlight_exit(priv);
 	ideapad_dytc_profile_exit(priv);
 
-	for (i = 0; i < IDEAPAD_RFKILL_DEV_NUM; i++)
-		ideapad_unregister_rfkill(priv, i);
+	if (!no_rfkill)
+		for (i = 0; i < IDEAPAD_RFKILL_DEV_NUM; i++)
+			ideapad_unregister_rfkill(priv, i);
 
 	ideapad_kbd_bl_exit(priv);
 	ideapad_input_exit(priv);
@@ -1951,7 +1961,9 @@ static int ideapad_acpi_resume(struct device *dev)
 {
 	struct ideapad_private *priv = dev_get_drvdata(dev);
 
-	ideapad_sync_rfk_state(priv);
+	if (!no_rfkill)
+		ideapad_sync_rfk_state(priv);
+
 	ideapad_sync_touchpad_state(priv, false);
 
 	if (priv->dytc)
